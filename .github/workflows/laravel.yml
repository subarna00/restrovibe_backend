name: Deploy to EC2

on:
  push:
    branches:
      - main        # Production
      - staging     # Staging environment

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd /var/www/html/restrovibe_backend
            
            # Fix git ownership warning
            git config --global --add safe.directory /var/www/html/restrovibe_backend
            
            # Pull latest code (use correct branch)
            git pull origin ${{ github.ref_name }}
            
            # Install/update dependencies (no interaction)
            composer install --no-dev --optimize-autoloader --no-interaction
            
            # Clear old cache BEFORE running migrations
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear
            
            # Run migrations (with force flag for production)
            php artisan migrate --force
            
            # Rebuild cache
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Optimize application
            php artisan optimize

            # Restart PHP-FPM gracefully
            sudo systemctl reload php8.3-fpm
            
            # Clear OPcache (if enabled)
            php artisan optimize:clear
